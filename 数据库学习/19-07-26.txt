19-07-26

DQL：
	基础查询：
		多个字段
		select 列名字段 from 表名
		去除重复
		select distinct 列名字段 from 表名
		
		计算列
		select 列名字段,列名相加 as 别名 from 表名
		注意：有null参与的四则计算，计算结果都为null
		ifnull(列,替换值)
		
		起别名
		列后面加as或者直接加空格

	条件查询：
		where后跟条件
		运算符：
			>，< 类型
			&& and，|| or 类型
			between 。。 and 。。
			in()
			is not null
			like：_单个字符，%多个字符
	
	排序查询：
		语法：
		order by 字段1 方式；
		asc升序（默认），desc降序
		第二条件在第一条件相同情况下才执行

	聚合函数:讲一列数据整体计算
		1count：计算个数
		2max：
		3min：
		4sum：
		5avg：
		注意：排除null

	分组查询：
		group by 分组字段
		注意：分组之后查询的字段：分组字段，聚合函数
		分组之前加条件用where
		分组之后加条件用having

	分页查询：
		limit 开始值，条数

约束：对数据进行限定，保证数据的正确性
	主键约束：primary key  非空且唯一
		一张表只能有一个字段为主键
		表中的唯一标识
		删除采用：alter table 表名 drop primary key
		自动增长：auto_increment，写在primary key 后面
	非空约束：not null
		删除采用：alter table 表名 modify 列名 数据类型
	唯一约束：unique
		删除采用：alter table 表名 drop index 数据名
	外键约束：让表与表产生关系
		constraint 外键名称 foreign key 外键列名称 references 主表名称（主列名称）
		删除外键：alter table 外键表名 drop foreign key 外键名
	
设置级联：
	constraint 外键名称 foreign key 外键列名称 references 主表名称（主列名称）on update cascade
删除级联：
	constraint 外键名称 foreign key 外键列名称 references 主表名称（主列名称）on delete  cascade
	
一对多：在多的一方建立外键，指向一的主键
多对多：通过中间表，相当于第三张表记录，联合主键
一对一：在任意一方添加唯一外键指向另一方 

数据库设计的范式：
	第一范式：每一列都是不可分割的原子数据项
	第二范式：在1的基础上，非码属性必须完全依赖候选码 消除部分依赖 
	第三范式：在2的基础上，任何非主属性不依赖其他非主属性 消除传递依赖

数据库的备份和还原：
	命令行：
		备份mysqldump -u用户名 -p 数据库名 > 保存路径
		还原
			登录->创建->使用->还原：source 备份文件路径

多表查询：笛卡尔积
	内连接查询：
		隐式内连接：用where条件消除无用数据
		显示内连接：select 字段列表 from 表名1 (inner) join 表名2 on 条件
	外链接查询：
		左外：select 字段列表 from 表名1 left(outer) join 表名2 on 条件
			左表所有数据及其交集部分
		友外：select 字段列表 from 表名1 right(outer) join 表名2 on 条件
			左表所有数据及其交集部分
	子查询：查询中嵌套查询
		1 单行单列：可作为条件
		2 多行单列：使用运算符in判断
		3 多行多列：作为虚拟表 

事务：
	如果一个包含多个步骤的业务操作，被业务管理，这些操作要么同时成功，要么同时失败
	操作：
		开启：start transaction
		回滚：rollback
		提交：commit
	默认提交修改：set @@autocommit=0
	原子性、持久性、隔离性、一致性

DCL：
	添加用户：
		create user 用户名@主机名 identified by 密码
	删除用户：
		drop user 用户名@主机名
	修改密码：
		update user password = password(新密码）where user =用户名
		set password for 用户名@主机名=password（新密码）